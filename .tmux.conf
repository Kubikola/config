# -g means globally 
# remap prefix
unbind C-b
set -g prefix C-s

#split a window mappings, open terminal in the current folder
bind-key v split-window -h -c '#{pane_current_path}'
bind-key h split-window -c '#{pane_current_path}'

#fast tmux reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

#pane focus changing mappings
bind-key -n M-h select-pane -L 
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

#changing the default terminal
#set-option -g default-terminal "urxvt"

#changing the status bar fg and bg color
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

#display the whole session name
set-option -g status-left-length 50

# Using the mouse to switch panes and scrolling
set-option -g mouse on
set-option -g mode-mouse on

#creating a new window in the current folder
bind-key t new-window -c '#{pane_current_path}'

#quitting a pane
bind-key w kill-pane

#quitting a window
bind-key q kill-window

#quitting a session
bind-key Q kill-session

#relevant title bars
set-option -g set-titles on

# don't rename windows automatically
set-option -g allow-rename off

#active window border
set-option -g pane-active-border-style bg=default,fg='#00bfff'

#window resizing bindings
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

#move pane to new window
bind-key b break-pane -d

#enable vi mode selection
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l
